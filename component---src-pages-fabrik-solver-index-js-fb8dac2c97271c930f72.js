"use strict";(self.webpackChunkjasonwoitalla=self.webpackChunkjasonwoitalla||[]).push([[638],{5659:function(e,t,n){n.d(t,{Z:function(){return i}});var o=n(7294),a=n(1597),l=n(8014),r=n(7606),i=function(e){var t=e.link,n=e.buttonstyle,i=(e.onClick,e.children);return o.createElement("div",{className:"button-module--buttonContainer--Q68-w"},o.createElement(a.Link,{to:t,className:"button-module--button--BvGZT",buttonstyle:n},i,o.createElement("span",null,o.createElement(r.G,{icon:l._tD}))))}},3568:function(e,t,n){n.d(t,{Z:function(){return r}});var o=n(7294),a="columns-module--column--HxPam",l="columns-module--container--EMT3H",r=function(e){var t=e.maxColumns,n=e.children;if(t){t=parseInt(t);for(var r=[],i=0;i<t;i++){for(var s=[],c=i;c<n.length;c+=t)s.push(o.cloneElement(n[c]));r.push(o.createElement("div",{className:a},s))}return o.createElement("div",{className:l},r)}return o.createElement("div",{className:l},o.Children.map(n,(function(e){return o.createElement("div",{className:a},o.cloneElement(e))})))}},2302:function(e,t,n){n.d(t,{Z:function(){return a}});var o=n(7294),a=function(){return o.createElement("div",{className:"divider-module--divider--fcSlf"})}},97:function(e,t,n){n.r(t),n.d(t,{default:function(){return d}});var o=n(7294),a=(n(3568),n(2875)),l=n(5659),r=n(2302),i=n(1597),s=n.p+"static/fabrik_no_constraints-6da39cf72e958a4d64cdf5a240db1ea8.mp4",c=n.p+"static/fabrik_constraints-146064de1a4b27122325192e633137c2.mp4",m=n.p+"static/table_animation-9d890e72c727bc607dc0d53d21a032b6.mp4",d=function(){return o.createElement(a.Z,{pageTitle:"FABRIK Solver",active:"none"},o.createElement("h1",{className:"fabrik-solver-module--title--+z6m+"},"FABRIK Solver"),o.createElement("p",{style:{fontWeight:"bold"}},"Written by: Jason Woitalla"),o.createElement("p",null,"This is my report of my FABRIK IK solver written in the Godot Engine using GDScript. This simulation uses Godot to help with rendering and has prebuild classes for geometry. However, the actual logic of the IK solver was written by me. I've listed what Godot classes were used and where I got the logic for the algorithms used."),o.createElement(l.Z,{link:"https://github.com/jasonwoitalla/csci5611-project3"},"Github Code Link"),o.createElement(l.Z,{link:"https://github.com/jasonwoitalla/csci5611-project3/blob/main/ik/IKSolver.gd",className:"fabrik-solver-module--buttonSpacing--1W1bU"},"Solver Script"),o.createElement(r.Z,null),o.createElement("h2",null,"Introduction"),o.createElement("p",null,"This is my inverse kinematics solver for the Godot Game Engine. It uses the FABRIK algorithm to solve for the bone positions. The reason FABRIK was used was to get an easy to program 3d position solver for the bones. The result was a really quick IK solver with minimal code at the start. However, FABRIK had its own challenges that needed to be overcome. For starters because FABRIK uses bone positions instead of angle calculations bone constraints were a major challenge. The other large issue that came from FABRIK was aligning the bone rotations after the positions were set. The reason this was needed is because in Godot, bones are represented with a transformation matrix and there contain rotation data. In order for my IK solver to look good child bones needed to look at their parent."),o.createElement("br",null),o.createElement("p",null,"After the initial algorithm was completed and bone alignment completed these are the results I got. Note that the model used was found from a Godot sample project as the rig needed for this work has to be very specific to IK solvers."),o.createElement("div",null,o.createElement("video",{loop:!0,controls:!0,autoplay:!0,muted:!0,width:640},o.createElement("source",{src:s,type:"video/mp4"}))),o.createElement("p",null,"In order for the IK solver to look decent, joint constraints are needed. FABRIK does not allow for joint constrains very easily, but it is possible as described in the original paper. Thanks to a Youtube video I was able to find some sample code implementing the constraints and successfully ported the code into Godot. Here is the Robot moving with constraints:"),o.createElement("div",null,o.createElement("video",{loop:!0,controls:!0,autoplay:!0,muted:!0,width:640},o.createElement("source",{src:c,type:"video/mp4"}))),o.createElement("p",{style:{fontWeight:"bold"}},"*Note that the green block here is meant to serve as a visual indicator of the target position. This is supposed to be a waving animation powered by the IK solver and the block would be hidden under normal circumstances."),o.createElement(r.Z,null),o.createElement("h2",null,"Godot Powered Animation"),o.createElement("p",null,"The big use of my IK solver is interacting with the Godot game engine and being used in the animation system. The Godot game engine is able to interpolate keyframes from pretty much any defined property. This was used to create the final animation. The animation has the robot walking towards a table thus moving the IK root. The IK solver on the arm is target onto the green target the whole time. Once at the table the animation system moves the target around the table. The whole time the IK solver is tracking the target."),o.createElement("div",null,o.createElement("video",{loop:!0,controls:!0,autoplay:!0,muted:!0,width:640},o.createElement("source",{src:m,type:"video/mp4"}))),o.createElement(r.Z,null),o.createElement("h3",null,"Challenges"),o.createElement("p",null,"I faced a lot of challenges in this project, more than any other while taking CSCI 5611. 3d IK solvers are very hard and I underestimated the amount of work involved. Overall I'm too proud with how the animation turned out and wish I had more time to make it look nicer. That being said after I got the biggest hurdle out of the way, joint constraints it was smooth sailing. Figuring out the math behind 3d joint constraints in FABRIK was very very hard. But reading through the paper and watching a video example of it really helped."),o.createElement("h3",null,"Tools / Resources"),o.createElement("p",null,o.createElement("p",{style:{fontWeight:"bold"}},"Tools"),o.createElement("ul",null,o.createElement("li",null,o.createElement(i.Link,{to:"https://godotengine.org/"},"Godot Engine")," - Game Engine for 3D rendering"),o.createElement("li",null,o.createElement(i.Link,{to:"https://www.blender.org/"},"Blender")," - 3d modeling"),o.createElement("li",null,o.createElement(i.Link,{to:"https://docs.godotengine.org/en/stable/classes/class_transform.html"},"Transform")," ","- A Godot class used to represent transformation matrices."),o.createElement("li",null,o.createElement(i.Link,{to:"https://docs.godotengine.org/en/stable/classes/class_vector3.html"},"Vector3")," ","- A Godot class used to represent 3d vectors."),o.createElement("li",null,o.createElement(i.Link,{to:"https://docs.godotengine.org/en/stable/classes/class_basis.html#class-basis"},"Basis")," ","- A Godot class used to represent 3d rotations")),o.createElement("p",{style:{fontWeight:"bold"}},"Resources"),o.createElement("ul",null,o.createElement("li",null,o.createElement(i.Link,{to:"http://www.andreasaristidou.com/publications/papers/FABRIK.pdf"},"FABRIK Paper")),o.createElement("li",null,o.createElement(i.Link,{to:"https://www.youtube.com/watch?v=UNoX65PRehA"},"Youtube Video on FABRIK Constraints")))),o.createElement("h3",null,"Grading Summary"),o.createElement("p",null,"Here is a list of attempted parts:",o.createElement("ul",null,o.createElement("li",null,"Single-arm IK (20 points)"),o.createElement("li",null,"Joint Limits (20 points)"),o.createElement("li",null,"Moving IK (10 points)"),o.createElement("li",null,"3D Simulation & Rendering (20 points)"),o.createElement("li",null,"Skinned Models (10 points)"),o.createElement("li",null,"IK + Character Animation (10 points)"))))}}}]);
//# sourceMappingURL=component---src-pages-fabrik-solver-index-js-fb8dac2c97271c930f72.js.map