{"version":3,"file":"component---src-pages-projects-index-js-46deef93b59af4c87026.js","mappings":"iKAQA,EAJgB,WACd,OAAO,uBAAKA,UCJO,qC,+JC0BrB,EAnBgB,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KACvD,OACE,uBAAKN,UCTc,oCDUjB,gBAAC,EAAAO,KAAD,CAAMC,GAAIF,EAAMN,UCNC,oCDOf,uBAAKA,UCRM,gCDSRE,EACD,4BACE,gBAAC,IAAD,CAAiBO,KAAMC,EAAAA,IAAcC,KAAK,UAIhD,sBAAIX,UCbS,gCDaiBC,GAC9B,uBAAKD,UCbO,+BDakBG,GAC9B,qBAAGH,UClBgB,sCDkBgBI,GACnC,uBAAKJ,UCpBM,8BDoBkBK,KEqEnC,EAjFqB,WACnB,IAAMO,GAAOC,EAAAA,EAAAA,gBAAe,aA8BxBC,EACF,gBAAC,IAAD,CACEb,MAAM,WACNc,UAAU,gBACVC,IAAI,kCACJC,aAAa,SAIjB,OACE,gBAAC,IAAD,CAAQC,UAAU,cAAcJ,SAAUA,EAAUK,OAAO,WACxDP,EAAKQ,uBAAuBC,MAAMC,KAAI,SAACC,GACtC,OACE,gCACE,0BAAKA,EAAQC,KAAKD,SACjBA,EAAQC,KAAKC,SAASH,KAAI,SAACI,GAC1B,IAAIrB,EACF,gBAAC,IAAD,CAAQC,KAAMoB,EAAQC,SAAUD,EAAQE,YAEtCzB,EACF,gBAAC,EAAA0B,EAAD,CACE3B,OAAO4B,EAAAA,EAAAA,GAASJ,EAAQvB,MACxB4B,IAAKL,EAAQM,UAGb9B,EACF,gBAAC,EAAA2B,EAAD,CACE3B,OAAO4B,EAAAA,EAAAA,GAASJ,EAAQxB,OACxB6B,IAAKL,EAAQO,WAGjB,OACE,gBAAC,EAAD,CACEhC,MAAOyB,EAAQA,QACfxB,MAAOA,EACPC,KAAMA,EACNC,YAAasB,EAAQtB,YACrBC,IAAKA,EACLC,KAAMoB,EAAQC,aAIpB,gBAAC,IAAD","sources":["webpack://jasonwoitalla/./src/components/divider.js","webpack://jasonwoitalla/./src/components/divider.module.scss","webpack://jasonwoitalla/./src/components/project.js","webpack://jasonwoitalla/./src/components/project.module.scss","webpack://jasonwoitalla/./src/pages/projects/index.js"],"sourcesContent":["import * as React from \"react\";\n\nimport * as styles from \"./divider.module.scss\";\n\nconst Divider = () => {\n  return <div className={styles.divider}></div>;\n};\n\nexport default Divider;\n","// extracted by mini-css-extract-plugin\nexport var divider = \"divider-module--divider--fcSlf\";","import * as React from \"react\";\n\nimport { Link } from \"gatsby\";\nimport { faCirclePlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport * as styles from \"./project.module.scss\";\n\nconst Project = ({ title, image, tool, description, cta, link }) => {\n  return (\n    <div className={styles.container}>\n      <Link to={link} className={styles.imageLink}>\n        <div className={styles.image}>\n          {image}\n          <span>\n            <FontAwesomeIcon icon={faCirclePlus} size=\"xl\" />\n          </span>\n        </div>\n      </Link>\n      <h3 className={styles.title}>{title}</h3>\n      <div className={styles.tool}>{tool}</div>\n      <p className={styles.description}>{description}</p>\n      <div className={styles.cta}>{cta}</div>\n    </div>\n  );\n};\n\nexport default Project;\n","// extracted by mini-css-extract-plugin\nexport var container = \"project-module--container--k1Ien\";\nexport var cta = \"project-module--cta--4GseE\";\nexport var description = \"project-module--description--9-hMA\";\nexport var image = \"project-module--image--FSIqE\";\nexport var imageLink = \"project-module--imageLink--yFTzR\";\nexport var title = \"project-module--title--NvLop\";\nexport var tool = \"project-module--tool--3yH3R\";","import * as React from \"react\";\n\nimport Button from \"../../components/button\";\nimport Divider from \"../../components/divider\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../../components/layout\";\nimport PageHero from \"../../components/page-hero\";\nimport Project from \"../../components/project\";\n\nconst ProjectsPage = () => {\n  const data = useStaticQuery(graphql`\n    query ProjectPageQuery {\n      allProjectPageDataJson {\n        edges {\n          node {\n            section\n            projects {\n              project\n              description\n              buttonText\n              ctaLink\n              imageAlt\n              toolAlt\n              image {\n                childImageSharp {\n                  gatsbyImageData(width: 300, quality: 75)\n                }\n              }\n              tool {\n                childImageSharp {\n                  gatsbyImageData(width: 175)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  let pageHero = (\n    <PageHero\n      title=\"Projects\"\n      heroImage=\"computer-code\"\n      sub=\"Explore my project library here\"\n      customHeight=\"35vh\"\n    />\n  );\n\n  return (\n    <Layout pageTitle=\"My Projects\" pageHero={pageHero} active=\"project\">\n      {data.allProjectPageDataJson.edges.map((section) => {\n        return (\n          <>\n            <h2>{section.node.section}</h2>\n            {section.node.projects.map((project) => {\n              let cta = (\n                <Button link={project.ctaLink}>{project.buttonText}</Button>\n              );\n              let tool = (\n                <GatsbyImage\n                  image={getImage(project.tool)}\n                  alt={project.toolAlt}\n                />\n              );\n              let image = (\n                <GatsbyImage\n                  image={getImage(project.image)}\n                  alt={project.imageAlt}\n                />\n              );\n              return (\n                <Project\n                  title={project.project}\n                  image={image}\n                  tool={tool}\n                  description={project.description}\n                  cta={cta}\n                  link={project.ctaLink}\n                />\n              );\n            })}\n            <Divider />\n          </>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport default ProjectsPage;\n"],"names":["className","title","image","tool","description","cta","link","Link","to","icon","faCirclePlus","size","data","useStaticQuery","pageHero","heroImage","sub","customHeight","pageTitle","active","allProjectPageDataJson","edges","map","section","node","projects","project","ctaLink","buttonText","G","getImage","alt","toolAlt","imageAlt"],"sourceRoot":""}