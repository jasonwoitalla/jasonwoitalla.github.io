{"version":3,"file":"component---src-pages-index-js-421a543e1d91d1034331.js","mappings":"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","sources":["webpack://jasonwoitalla/./src/components/columns.module.scss","webpack://jasonwoitalla/./src/components/columns.js","webpack://jasonwoitalla/./src/components/divider.js","webpack://jasonwoitalla/./src/components/divider.module.scss","webpack://jasonwoitalla/./src/components/coursework.js","webpack://jasonwoitalla/./src/components/coursework.module.scss","webpack://jasonwoitalla/./src/components/project_grid/project_grid_comp.js","webpack://jasonwoitalla/./src/components/project_grid/project_grid.module.scss","webpack://jasonwoitalla/./src/components/project_grid/project_grid.js","webpack://jasonwoitalla/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack://jasonwoitalla/./src/hooks/useIntersection.js","webpack://jasonwoitalla/./src/components/progress-bar.js","webpack://jasonwoitalla/./src/components/progress-bar.module.scss","webpack://jasonwoitalla/./src/components/skill-section.js","webpack://jasonwoitalla/./src/components/skill-section.module.scss","webpack://jasonwoitalla/./src/pages/index.js","webpack://jasonwoitalla/./src/pages/index.module.scss"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var column = \"columns-module--column--HxPam\";\nexport var container = \"columns-module--container--EMT3H\";","import * as React from \"react\";\n\nimport * as styles from \"./columns.module.scss\";\n\nconst Columns = ({ maxColumns, children }) => {\n  if (maxColumns) {\n    maxColumns = parseInt(maxColumns);\n    let columns = [];\n    for (let i = 0; i < maxColumns; i++) {\n      let contents = [];\n      for (let j = i; j < children.length; j += maxColumns) {\n        contents.push(React.cloneElement(children[j]));\n      }\n      columns.push(<div className={styles.column}>{contents}</div>);\n    }\n    return <div className={styles.container}>{columns}</div>;\n  } else {\n    return (\n      <div className={styles.container}>\n        {React.Children.map(children, (child) => (\n          <div className={styles.column}>{React.cloneElement(child)}</div>\n        ))}\n      </div>\n    );\n  }\n};\n\nexport default Columns;\n","import * as React from \"react\";\n\nimport * as styles from \"./divider.module.scss\";\n\nconst Divider = () => {\n  return <div className={styles.divider}></div>;\n};\n\nexport default Divider;\n","// extracted by mini-css-extract-plugin\nexport var divider = \"divider-module--divider--fcSlf\";","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./coursework.module.scss\";\n\nconst Coursework = ({ title, description, cta, link }) => {\n  return (\n    <div>\n      <p className={styles.title}>{title}</p>\n      <p>{description}</p>\n      <Link to={link} className={styles.cta}>\n        {cta}\n      </Link>\n    </div>\n  );\n};\n\nexport default Coursework;\n","// extracted by mini-css-extract-plugin\nexport var cta = \"coursework-module--cta--aWTrn\";\nexport var title = \"coursework-module--title--Vtrze\";","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport * as styles from './project_grid.module.scss';\n\nconst ProjectGridComponent = ({projectName, tagLine, link, image, gridWidth}) => {\n    return (<div className={styles.gridComponent} style={{ gridColumn: \"span \" + gridWidth }}>\n        <Link to={link}>\n            <div className={styles.gridComponentOverlay}>\n                <div className={styles.image} style={{ width:\"100%\", height:\"100%\" }}>\n                        {image}\n                </div>\n                <div className={styles.gridComponentData}>\n                    <div className={styles.gridComponentDataName}>\n                        {projectName}\n                    </div>\n                    <div className={styles.gridComponentDataTagline}>\n                        {tagLine}\n                    </div>\n                </div>\n            </div>\n        </Link>\n    </div>);\n}\n\nexport default ProjectGridComponent;\n","// extracted by mini-css-extract-plugin\nexport var gridComponent = \"project_grid-module--gridComponent--KuFra\";\nexport var gridComponentData = \"project_grid-module--gridComponentData--9-2mJ\";\nexport var gridComponentDataName = \"project_grid-module--gridComponentDataName--wRf5k\";\nexport var gridComponentDataTagline = \"project_grid-module--gridComponentDataTagline--ey2nu\";\nexport var gridComponentOverlay = \"project_grid-module--gridComponentOverlay--gkCXK\";\nexport var image = \"project_grid-module--image--QbOJe\";\nexport var projectGrid = \"project_grid-module--projectGrid--ZJbCC\";","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport ProjectGridComponent from \"./project_grid_comp\";\nimport * as styles from \"./project_grid.module.scss\";\n\nconst ProjectGrid = ({}) => {\n    const dataQuery = useStaticQuery(graphql`\n        query ProjectGridQuery {\n            allProjectGridDataJson {\n            edges {\n                node {\n                project\n                tagLine\n                link\n                bgImage {\n                    childImageSharp {\n                    gatsbyImageData(quality: 60)\n                    }\n                }\n                imageAlt\n                gridWidth\n                }\n            }\n            }\n        }\n    `);\n\n    return (\n        <div className={styles.projectGrid}>\n            {dataQuery.allProjectGridDataJson.edges.map((project) => (\n                <ProjectGridComponent\n                    projectName={project.node.project}\n                    tagLine={project.node.tagLine}\n                    link={project.node.link}\n                    image={\n                        <GatsbyImage\n                            image={getImage(project.node.bgImage)}\n                            alt={project.node.imageAlt}\n                        />\n                    }\n                    gridWidth={project.node.gridWidth}\n                />\n            ))}\n        </div>\n    );\n} \n\nexport default ProjectGrid;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import { useState, useEffect } from \"react\";\n\nconst useIntersection = (element, rootMargin) => {\n  const [isVisible, setState] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setState(entry.isIntersecting);\n      },\n      { rootMargin }\n    );\n\n    element.current && observer.observe(element.current);\n    const currElem = element.current;\n\n    return () => observer.unobserve(currElem);\n  }, []);\n\n  return isVisible;\n};\n\nexport default useIntersection;\n","import * as React from \"react\";\nimport useIntersection from \"../hooks/useIntersection\";\n\nimport * as styles from \"./progress-bar.module.scss\";\n\nconst ProgressBar = ({ label, progress }) => {\n  const ref = React.useRef();\n  const inViewport = useIntersection(ref, \"-50px\");\n\n  return (\n    <div ref={ref} className={styles.container}>\n      <div className={styles.label}>{label}</div>\n      <span className={styles.background}>\n        <span\n          className={styles.progress}\n          style={{ width: inViewport ? progress : \"0%\" }}\n        >\n          <span className={styles.progressLabel}>{progress}</span>\n        </span>\n      </span>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","// extracted by mini-css-extract-plugin\nexport var background = \"progress-bar-module--background--Sp5OL\";\nexport var container = \"progress-bar-module--container--otc8Y\";\nexport var label = \"progress-bar-module--label--QKbMP\";\nexport var progress = \"progress-bar-module--progress--mhoOh\";\nexport var progressLabel = \"progress-bar-module--progressLabel--iT0of\";","import * as React from \"react\";\nimport ProgressBar from \"./progress-bar\";\n\nimport * as styles from \"./skill-section.module.scss\";\n\nconst SkillSection = ({ title, items }) => {\n  return (\n    <>\n      <h3>{title}</h3>\n      {items.map((skill) => (\n        <div className={styles.progress}>\n          <ProgressBar label={skill[0]} progress={skill[1]} />\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default SkillSection;\n","// extracted by mini-css-extract-plugin\nexport var progress = \"skill-section-module--progress--X5evg\";","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport * as styles from \"./index.module.scss\";\n\nimport Button from \"../components/button\";\nimport Columns from \"../components/columns\";\nimport Coursework from \"../components/coursework\";\nimport Divider from \"../components/divider\";\nimport Layout from \"../components/layout\";\nimport PageHero from \"../components/page-hero\";\nimport ProjectGrid from \"../components/project_grid/project_grid\";\nimport SkillSection from \"../components/skill-section\";\n\nconst IndexPage = () => {\n  const data = useStaticQuery(query);\n  console.log(data);\n\n  let heroData = data.allDataJson.edges[0].node.hero;\n  let skillsData = data.allDataJson.edges[0].node.skills;\n  let courseworkData = data.allDataJson.edges[0].node.coursework;\n  let experienceData = data.allDataJson.edges[0].node.experience;\n\n  let mainPageHero = (\n    <PageHero\n      title={heroData.title}\n      sub={heroData.sub}\n      link={heroData.link}\n      buttonText={heroData.buttonText}\n      heroImage={heroData.heroImage}\n    />\n  );\n\n  return (\n    <Layout pageTitle=\"Homepage\" pageHero={mainPageHero}>\n      <h2>Projects / Achievements</h2>\n      <p id=\"resume\">\n        Here are some of the projects that I have completed that I would like to highlight. My skills in \n        web development, graphics, and hobby game development are featured here. Click on a project to\n        view more about it. There you can see what skills I used to build that project, view source code, and\n        try out a live demo for yourself.\n      </p>\n      <ProjectGrid />\n\n      <Divider />\n      <div>\n        <h2>Experience</h2>\n        <Columns maxColumns=\"2\">\n          {experienceData.map((job) => (\n            <div className={styles.jobEntry}>\n              <p>{job.job}</p>\n              <p>{job.description}</p>\n            </div>\n          ))}\n        </Columns>\n      </div>\n\n      <Divider />\n      <div>\n        <h2>Education & Coursework</h2>\n        <p>\n          These are courses I have completed in peruse of my undergraduate\n          degree in computer science at the University of Minnesota.\n        </p>\n        <Columns maxColumns=\"2\">\n          <div>\n            <p>\n              <span style={{ fontWeight: \"bold\" }}>Bachelor of Science in Computer Science</span>\n              <br/>\n              <span style={{ fontStyle:\"italic\" }}>Minor in Mathematics</span>\n            </p>\n            <p>\n              College of Science and Engineering, University of Minnesota Twin\n              Cities\n            </p>\n            <p style={{ fontWeight: \"bold\" }}>Graduated in 2023</p>\n            <p style={{ fontWeight: \"bold\" }}>GPA: 3.58 / 4.00</p>\n            <Button link=\"https://www.linkedin.com/in/jason-woitalla/\" internal={false}>\n              View Me on LinkedIn\n            </Button>\n          </div>\n          <div>\n            {courseworkData.map((course) => (\n              <Coursework\n                title={course.class}\n                description={course.description}\n                cta={course.cta}\n                link={course.cta_link}\n              />\n            ))}\n          </div>\n        </Columns>\n      </div>\n\n      <Divider />\n      <h2>Skills</h2>\n      <p>\n        English is my first language and I have strong communication skills. I\n        have advanced computer skills and can operate Windows, macOS, and Linux\n        efficiently.\n      </p>\n      {skillsData.map((skillSection) => (\n        <SkillSection title={skillSection.title} items={skillSection.items} />\n      ))}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query HomepageDataQuery {\n    allDataJson {\n      edges {\n        node {\n          skills {\n            items\n            title\n          }\n          experience {\n            description\n            job\n          }\n          coursework {\n            class\n            cta\n            cta_link\n            description\n          }\n          hero {\n            buttonText\n            heroImage\n            link\n            sub\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","// extracted by mini-css-extract-plugin\nexport var jobEntry = \"index-module--jobEntry--fbOUR\";"],"names":["column","container","maxColumns","children","parseInt","columns","i","contents","j","length","push","React","className","styles","child","title","description","cta","link","Link","to","projectName","tagLine","image","gridWidth","style","gridColumn","width","height","obj","TypeError","dataQuery","useStaticQuery","allProjectGridDataJson","edges","map","project","node","G","getImage","bgImage","alt","imageAlt","element","rootMargin","useState","isVisible","setState","useEffect","observer","IntersectionObserver","entry","isIntersecting","current","observe","currElem","unobserve","label","progress","ref","inViewport","useIntersection","items","skill","query","data","console","log","heroData","allDataJson","hero","skillsData","skills","courseworkData","coursework","experienceData","experience","mainPageHero","sub","buttonText","heroImage","pageTitle","pageHero","id","job","fontWeight","fontStyle","internal","course","class","cta_link","skillSection"],"sourceRoot":""}