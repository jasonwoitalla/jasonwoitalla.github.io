{"version":3,"file":"component---src-pages-k-means-index-js-a2823d994f156b3e8c57.js","mappings":"+LACW,EAAS,+BACTA,EAAkB,wCC8B7B,EA1Be,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,YAAsBC,GAA8B,EAAvCC,QAAuC,EAA9BD,UAA8B,IAApBE,SACtD,YAD0E,SAGtE,uBAAKC,UAAWC,GACd,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAMK,UAAWC,EAAeL,YAAaA,GACpDC,EACD,4BACE,gBAAC,IAAD,CAAiBO,KAAMC,EAAAA,SAO7B,uBAAKL,UAAWC,GACd,qBAAGK,KAAMX,EAAMK,UAAWC,EAAeL,YAAaA,EAAaW,OAAO,UACvEV,EACD,4BACE,gBAAC,IAAD,CAAiBO,KAAMC,EAAAA,W,mECvBxBG,EAAS,gCACTC,EAAY,mCCyBvB,EAvBgB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYb,EAAe,EAAfA,SAC7B,GAAIa,EAAY,CACdA,EAAaC,SAASD,GAEtB,IADA,IAAIE,EAAU,GACLC,EAAI,EAAGA,EAAIH,EAAYG,IAAK,CAEnC,IADA,IAAIC,EAAW,GACNC,EAAIF,EAAGE,EAAIlB,EAASmB,OAAQD,GAAKL,EACxCI,EAASG,KAAKC,EAAAA,aAAmBrB,EAASkB,KAE5CH,EAAQK,KAAK,uBAAKjB,UAAWC,GAAgBa,IAE/C,OAAO,uBAAKd,UAAWC,GAAmBW,GAE1C,OACE,uBAAKZ,UAAWC,GACbiB,EAAAA,SAAAA,IAAmBrB,GAAU,SAACsB,GAAD,OAC5B,uBAAKnB,UAAWC,GAAgBiB,EAAAA,aAAmBC,U,uHClBlD,EAAQ,+BACRC,EAAQ,+BCwDnB,EAlDe,WACb,OACE,gBAAC,IAAD,CAAQC,UAAU,WAChB,sBAAIrB,UDXU,iCCWd,WACA,seASA,gBAAC,IAAD,CAAQL,KAAK,aAAb,uBACA,gBAAC,IAAD,CAASe,WAAW,KAClB,2BACE,sBAAIV,UAAWC,GAAf,SACA,uBAAKD,UAAWC,GACd,gBAAC,EAAAqB,EAAD,CACEC,IAAI,mCACJC,IAAI,gBAFN,uBAKF,uBAAKxB,UAAWC,GACd,gBAAC,EAAAqB,EAAD,CACEC,IAAI,mCACJC,IAAI,gBAFN,wBAMJ,2BACE,sBAAIxB,UAAWC,GAAf,UACA,uBAAKD,UAAWC,GACd,gBAAC,EAAAqB,EAAD,CACEC,IAAI,oCACJC,IAAI,gBAFN,uBAKF,uBAAKxB,UAAWC,GACd,gBAAC,EAAAqB,EAAD,CACEC,IAAI,oCACJC,IAAI,gBAFN,4B","sources":["webpack://jasonwoitalla/./src/components/button.module.scss","webpack://jasonwoitalla/./src/components/button.js","webpack://jasonwoitalla/./src/components/columns.module.scss","webpack://jasonwoitalla/./src/components/columns.js","webpack://jasonwoitalla/./src/pages/k-means/k-means.module.scss","webpack://jasonwoitalla/./src/pages/k-means/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var button = \"button-module--button--BvGZT\";\nexport var buttonContainer = \"button-module--buttonContainer--Q68-w\";","import { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link } from \"gatsby\";\nimport * as React from \"react\";\nimport * as styles from \"./button.module.scss\";\n\nconst Button = ({ link, buttonstyle, onClick, children, internal=true }) => {\n  if(internal) {\n    return (\n      <div className={styles.buttonContainer}>\n        <Link to={link} className={styles.button} buttonstyle={buttonstyle}>\n          {children}\n          <span>\n            <FontAwesomeIcon icon={faChevronRight} />\n          </span>\n        </Link>\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles.buttonContainer}>\n        <a href={link} className={styles.button} buttonstyle={buttonstyle} target=\"_blank\">\n          {children}\n          <span>\n            <FontAwesomeIcon icon={faChevronRight} />\n          </span>\n        </a>\n      </div>\n    );\n  }\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport var column = \"columns-module--column--HxPam\";\nexport var container = \"columns-module--container--EMT3H\";","import * as React from \"react\";\n\nimport * as styles from \"./columns.module.scss\";\n\nconst Columns = ({ maxColumns, children }) => {\n  if (maxColumns) {\n    maxColumns = parseInt(maxColumns);\n    let columns = [];\n    for (let i = 0; i < maxColumns; i++) {\n      let contents = [];\n      for (let j = i; j < children.length; j += maxColumns) {\n        contents.push(React.cloneElement(children[j]));\n      }\n      columns.push(<div className={styles.column}>{contents}</div>);\n    }\n    return <div className={styles.container}>{columns}</div>;\n  } else {\n    return (\n      <div className={styles.container}>\n        {React.Children.map(children, (child) => (\n          <div className={styles.column}>{React.cloneElement(child)}</div>\n        ))}\n      </div>\n    );\n  }\n};\n\nexport default Columns;\n","// extracted by mini-css-extract-plugin\nexport var header = \"k-means-module--header--frE9g\";\nexport var image = \"k-means-module--image--q2Jg8\";\nexport var title = \"k-means-module--title--Nmem8\";","import * as React from \"react\";\n\nimport Button from \"../../components/button\";\nimport Columns from \"../../components/columns\";\nimport Layout from \"../../components/layout\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nimport * as styles from \"./k-means.module.scss\";\n\nconst KMeans = () => {\n  return (\n    <Layout pageTitle=\"K Means\">\n      <h1 className={styles.header}>K Means</h1>\n      <p>\n        K Means is a clustering algorithm that Iâ€™ve implemented using Python.\n        The goal of K Means is to cluster a certain input of data into only k\n        number of outputs. For my implementation, I used the input and output as\n        an image file. I used ppm image files for simplicity. My K means will\n        read in the input image and attempt to cluster all the colors into the k\n        number of output colors. This sort of implementation has practical\n        applications in image compression.\n      </p>\n      <Button link=\"/projects\">Back to my Projects</Button>\n      <Columns maxColumns=\"2\">\n        <div>\n          <h2 className={styles.title}>Input</h2>\n          <div className={styles.image}>\n            <StaticImage\n              src=\"../../images/k-means/input_1.jpg\"\n              alt=\"Input Image 1\"\n            />\n          </div>\n          <div className={styles.image}>\n            <StaticImage\n              src=\"../../images/k-means/input_2.jpg\"\n              alt=\"Input Image 2\"\n            />\n          </div>\n        </div>\n        <div>\n          <h2 className={styles.title}>Output</h2>\n          <div className={styles.image}>\n            <StaticImage\n              src=\"../../images/k-means/output_1.jpg\"\n              alt=\"Input Image 1\"\n            />\n          </div>\n          <div className={styles.image}>\n            <StaticImage\n              src=\"../../images/k-means/output_2.jpg\"\n              alt=\"Input Image 2\"\n            />\n          </div>\n        </div>\n      </Columns>\n    </Layout>\n  );\n};\n\nexport default KMeans;\n"],"names":["buttonContainer","link","buttonstyle","children","onClick","internal","className","styles","Link","to","icon","faChevronRight","href","target","column","container","maxColumns","parseInt","columns","i","contents","j","length","push","React","child","title","pageTitle","S","src","alt"],"sourceRoot":""}